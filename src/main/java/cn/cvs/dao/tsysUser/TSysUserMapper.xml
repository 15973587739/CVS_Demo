<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cvs.dao.tsysUser.TSysUserMapper">
    <!--属性-->
    <resultMap type="cn.cvs.pojo.TSysUser" id="TSysUserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="account" column="account" jdbcType="VARCHAR"/>
        <result property="realName" column="realName" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="sex" column="sex" jdbcType="INTEGER"/>
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="roleId" column="roleId" jdbcType="INTEGER"/>
        <result property="createdUserId" column="createdUserId" jdbcType="INTEGER"/>
        <result property="createdTime" column="createdTime" jdbcType="TIMESTAMP"/>
        <result property="updatedUserId" column="updatedUserId" jdbcType="INTEGER"/>
        <result property="updatedTime" column="updatedTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <select id="count" resultType="int">
        select count(*) from t_sys_user
    </select>

    <select id="countUserById" resultType="int">
        select count(*) from t_sys_role r,t_sys_user u where u.roleId = r.id and r.id = #{id}
    </select>

    <select id="getUserList" resultType="TSysUser">
        select * from t_sys_user
    </select>

    <select id="getUsersByRealName" resultType="TSysUser" parameterType="String">
        select * from t_sys_user where realName like CONCAT ('%',#{param},'%')
    </select>

    <select id="getUsersByPojo" resultType="TSysUser" parameterType="TSysUser">
        select * from t_sys_user where realName like CONCAT ('%',#{realName},'%') and roleId=#{roleId}
    </select>

    <select id="getUsersByMap" resultType="TSysUser" parameterType="map">
        select * from t_sys_user where realName like CONCAT ('%',#{rName},'%') and roleId=#{rId}
    </select>

    <select id="getUsersByParams" resultType="TSysUser" parameterType="TSysUser">
         select * from t_sys_user where realName like CONCAT ('%',#{reName},'%') and roleId=#{roId}
    </select>

    <resultMap id="userWithRoleName" type="TSysUser">
        <id property="id" column="id"/>
        <result property="userRoleName" column="roleName"/>
    </resultMap>
    <select id="getUserListWithRoleName" parameterType="TSysUser" resultMap="userWithRoleName">
        select u.*,r.roleName from t_sys_user u,t_sys_role r where u.realName like CONCAT('%',#{realName},'%') and u.roleId = #{roleId} and u.roleId=r.id
    </select>

    <resultMap id="userWithSysRole" type="TSysRole">
        <id property="id" column="id"/>
        <result property="realName" column="realName"/>
        <!--sysRole关联对象-->
        <association property="sysRole" javaType="TSysRole">
            <id property="id" column="rid"/>
            <result property="code" column="code"/>
            <result property="roleName" column="roleName"/>
        </association>
    </resultMap>
    <select id="getUserListByRoleId" parameterType="int" resultMap="userWithSysRole">
        select u.*,r.id as rid,r.code,r.roleName from  t_sys_user u,t_sys_role r where u.roleId = #{roleId} and u.roleId=r.id
    </select>

    <resultMap id="userWithAddresses" type="TSysUser">
        <id property="id" column="id"/>
        <result property="realName" column="realName"/>
        <association property="sysRole" javaType="TSysRole">
            <id property="id" column="rid"/>
            <result property="roleName" column="roleName"/>
            <result property="createdTime" column="createdTime"/>
        </association>
        <!--    对象集合    -->
        <collection property="addressList" ofType="TAddress">
            <id property="id" column="aid"/>
            <result property="contact" column="contact"/>
            <result property="addressDesc" column="addressDesc"/>
            <result property="postcode" column="postCode"/>
            <result property="tel" column="tel"/>
        </collection>
    </resultMap>

    <select id="getUserAddressesByUserId" parameterType="int" resultMap="userWithAddresses">
        select u.*,a.id as aid,a.contact,a.addressDesc,a.postCode,a.tel from t_sys_user u,t_address a where u.id = a.userId and u.id=#{userId};
    </select>


    <insert id="add" parameterType="TSysUser">
        insert into t_sys_user(account, realName, password, sex, birthday, phone, address, roleId, createdUserId, createdTime)
        values(#{account},#{realName},#{password}, #{sex},#{birthday},#{phone},#{address},#{roleId},#{createdUserId},#{createdTime})
    </insert>

    <update id="modify" parameterType="TSysUser">
        update t_sys_user set account=#{account},realName=#{realName},password=#{password},sex=#{sex},phone=#{phone},address=#{address},
        birthday=#{birthday},roleId=#{roleId},updatedUserId=#{updatedUserId},updatedTime=#{updatedTime}
        where id=#{id}
    </update>

    <update id="updatePwd">
        update t_sys_user set password=#{password} where id=#{id}
    </update>

    <delete id="deleteUserById" parameterType="integer">
        delete  from t_sys_user where id=#{id}
    </delete>

    <select id="getUserByRoleIdArray" resultType="TSysUser">
        select * from t_sys_user where roleId in
                                 <foreach collection="array" item="item" open="(" separator="," close=")">
                                     #{item}
                                 </foreach>
    </select>


        <!---->
        <!---->
    <!--查询单个-->
    <select id="queryById" resultMap="TSysUserMap">
        select
            id, account, realName, password, sex, birthday, phone, address, roleId, createdUserId, createdTime, updatedUserId, updatedTime
        from t_sys_user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TSysUserMap">
        select
        id, account, realName, password, sex, birthday, phone, address, roleId, createdUserId, createdTime, updatedUserId, updatedTime
        from t_sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="account != null and account != ''">
                and account = #{account}
            </if>
            <if test="realName != null and realName != ''">
                and realName = #{realname}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="roleId != null">
                and roleId = #{roleid}
            </if>
            <if test="createdUserId != null">
                and createdUserId = #{createdUserId}
            </if>
            <if test="createdTime != null">
                and createdTime = #{createdTime}
            </if>
            <if test="updatedUserId != null">
                and updatedUserId = #{updatedUserId}
            </if>
            <if test="updatedTime != null">
                and updatedTime = #{updatedTime}
            </if>
        </where>
        limit #{pager.pageNo}, #{pager.pageSize}
    </select>

    <!--统计总行数-->
    <select id="countS" resultType="java.lang.Long">
        select count(1)
        from t_sys_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="account != null and account != ''">
                and account = #{account}
            </if>
            <if test="realName != null and realName != ''">
                and realName = #{realName}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="sex != null">
                and sex = #{sex}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="roleId != null">
                and roleId = #{roleId}
            </if>
            <if test="createdUserId != null">
                and createdUserId = #{createdUserId}
            </if>
            <if test="createdTime != null">
                and createdTime = #{createdTime}
            </if>
            <if test="updatedUserId != null">
                and updatedUserId = #{updatedUserId}
            </if>
            <if test="updatedTime != null">
                and updatedTime = #{updatedTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into t_sys_user(account, realName, password, sex, birthday, phone, address, roleId, createdUserId, createdTime, updatedUserId, updatedTime)
        values (#{account}, #{realname}, #{password}, #{sex}, #{birthday}, #{phone}, #{address}, #{roleid}, #{createduserid}, #{createdtime}, #{updateduserid}, #{updatedtime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into t_sys_user(account, realName, password, sex, birthday, phone, address, roleId, createdUserId, createdTime, updatedUserId, updatedTime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.account}, #{entity.realname}, #{entity.password}, #{entity.sex}, #{entity.birthday}, #{entity.phone}, #{entity.address}, #{entity.roleid}, #{entity.createduserid}, #{entity.createdtime}, #{entity.updateduserid}, #{entity.updatedtime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into t_sys_user(account, realName, password, sex, birthday, phone, address, roleId, createdUserId, createdTime, updatedUserId, updatedTime)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.account}, #{entity.realname}, #{entity.password}, #{entity.sex}, #{entity.birthday}, #{entity.phone}, #{entity.address}, #{entity.roleid}, #{entity.createduserid}, #{entity.createdtime}, #{entity.updateduserid}, #{entity.updatedtime})
        </foreach>
        on duplicate key update
        account = values(account),
        realName = values(realName),
        password = values(password),
        sex = values(sex),
        birthday = values(birthday),
        phone = values(phone),
        address = values(address),
        roleId = values(roleId),
        createdUserId = values(createdUserId),
        createdTime = values(createdTime),
        updatedUserId = values(updatedUserId),
        updatedTime = values(updatedTime)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_sys_user
        <set>
            <if test="account != null and account != ''">
                account = #{account},
            </if>
            <if test="realName != null and realName != ''">
                realName = #{realName},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="roleId != null">
                roleId = #{roleId},
            </if>
            <if test="createdUserId != null">
                createdUserId = #{createdUserId},
            </if>
            <if test="createdTime != null">
                createdTime = #{createdTime},
            </if>
            <if test="updatedUserId != null">
                updatedUserId = #{updatedUserId},
            </if>
            <if test="updatedTime != null">
                updatedTime = #{updatedTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_sys_user where id = #{id}
    </delete>
</mapper>